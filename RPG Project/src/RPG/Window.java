/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RPG;

import static RPG.Main.player;
import static java.awt.event.KeyEvent.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Gregory Salazar
 */
public class Window extends javax.swing.JFrame implements Runnable {

    private Thread thread;

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        screen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RPG Game");
        setBounds(new java.awt.Rectangle(0, 0, 800, 640));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 640));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        screen.setFocusable(false);
        screen.setRequestFocusEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        //on mouse click
        start();
    }//GEN-LAST:event_formMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        //on key pressed
        switch (evt.getKeyCode()) {
            case VK_A:  //left
                player.faceDir(Player.LEFT);
                break;
            case VK_D:  //right
                player.faceDir(Player.RIGHT);
                break;
            case VK_W:  //up
                player.faceDir(Player.UP);
                break;
            case VK_S:  //down
                player.faceDir(Player.DOWN);
                break;
            default:
                return;
        }
        player.move();
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        //on key released
    }//GEN-LAST:event_formKeyReleased

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        //unpause the game when un-minimized
        Main.unPause();
    }//GEN-LAST:event_formWindowDeiconified

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        //pause the game when minimized
        Main.pause();
    }//GEN-LAST:event_formWindowIconified

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel screen;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        //constantly renders the screen image in accordance with FPS
        while (true) {
            synchronized (Main.worldImage) {
                this.getGraphics().drawImage(Main.worldImage, 0, 0, null);
            }
            try {
                Thread.sleep(1000 / Main.SCREEN_FPS);
            } catch (InterruptedException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void start() {
        if (thread == null) {
            thread = new Thread(this, "Screen Rendering");
            thread.start();
        }
    }
}
